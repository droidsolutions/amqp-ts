# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Main

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
   name: Check - Lint
   runs-on: [ubuntu-latest]
   steps:
     - uses: actions/checkout@v2
     - name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v1
     - run: npm ci
     - run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
    - run: npm ci
    - run: npm run build
      env:
        CI: true
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: lib
        path: lib

  test:
    name: Coverage with Node ${{ matrix.node }}
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        node: [ '10', '12' ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Use RabbitMQ
        uses: nijel/rabbitmq-action@v1.0.0
      - run: npm ci
      - run: npm run test:coverage

  release:
    name: Semantic Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: [ubuntu-latest]
    needs:
      - lint
      - build
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
      - run: npm ci
      - name: Download lib from build job
        uses: actions/download-artifact@v1
        with:
          name: lib
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --dry-run
